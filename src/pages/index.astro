---
import { t } from 'i18next';

import Layout from '@/layouts/PageLayout.astro';
import Hero from '@/components/sections/Hero.astro';
import About from '@/components/sections/About.astro';
import Rewards from '@/components/sections/Rewards.astro';
import Contributors from '@/components/sections/Contributors.astro';
import AdditionalLinks from '@/components/sections/AdditionalLinks.astro';
import AboutToken from '@/components/sections/AboutToken.astro';
import Roadmap from '@/components/sections/Roadmap.astro';
import Logos from '@/components/Logos.astro';
import FAQ from '@/components/sections/FAQ.astro';
import { SITE } from '@/config';
import MiroLogo from '@/assets/images/logos/Miro.svg';
import MobbinLogo from '@/assets/images/logos/Mobbin.svg';
import StripeLogo from '@/assets/images/logos/Stripe.svg';
import WebflowLogo from '@/assets/images/logos/Webflow.svg';
import MondayLogo from '@/assets/images/logos/Monday.svg';
import Logo from '@/assets/Logo.svg';
import TimerBanner from '@/components/sections/TimerBanner.astro';
import ModalWrapper from '@/features/Contribution/ModalWrapper';
import PolkadotForm from '@/features/Contribution/PolkadotForm';

let logos = [
  {
    src: MiroLogo,
    alt: '',
  },
  {
    src: MobbinLogo,
    alt: '',
  },
  {
    src: StripeLogo,
    alt: '',
  },
  {
    src: WebflowLogo,
    alt: '',
  },
  {
    src: MondayLogo,
    alt: '',
  },
];

const tempCardsData = [
  {
    title: 'LitePapaer 2.0',
    href: 'http://google.com/',
    bulletList: [
      'Access to all basic features',
      'Basic reporting and analytics',
      'Up to 10 individual users',
    ],
    description:
      'Contribution for the raised xxx between 500,000 - 1,500,000 DOT will receive 8 DOT per contributed DOT as a reward.',
  },
  {
    title: 'WhitePaper',
    href: 'http://google.com/',
    bulletList: [
      'Access to all basic features',
      'Basic reporting and analytics',
      'Up to 10 individual users',
    ],
  },
  {
    title: 'Documentation',
    href: 'http://google.com/',
    description:
      'Contribution for the raised xxx between 500,000 - 1,500,000 DOT will receive 8 DOT per contributed DOT as a reward.',
  },
];

const aboutData = {
  projectDescription: t('descriptions.about'),
  cards: [
    {
      title: t('about.cards.12'),
      description: t('about.cards.description'),
    },
    {
      title: t('about.cards.2x'),
      description: t('about.cards.description'),
    },
  ],
};

let priceCard = [
  {
    label: t('aboutToken.cards.price.price'),
    body: '$0.0000 (1DOT - 10 XXX)',
  },
  {
    label: t('aboutToken.cards.price.totalSupply'),
    body: '35 000 000 000 DOT',
  },
  {
    label: t('aboutToken.cards.price.crowdloanRewardPool'),
    body: '20 000 000 DOT',
    subLabel: t('aboutToken.cards.price.xOfTotalSupply', { value: 62 }),
  },
];

let progressCard = [
  {
    label: t('aboutToken.cards.progress.lp'),
    progressValue: 40,
  },
  {
    label: t('aboutToken.cards.progress.team'),
    progressValue: 11,
  },
  {
    label: t('aboutToken.cards.progress.ecosystem'),
    progressValue: 4,
  },
  {
    label: t('aboutToken.cards.progress.validationRewards'),
    progressValue: 30,
  },
  {
    label: t('aboutToken.cards.progress.crowdloanFunds'),
    progressValue: 15,
  },
];

let timelinePoints = [
  {
    label: t('roadmap.points.start'),
    body: '12.12.2022',
  },
  {
    label: t('roadmap.points.testing'),
    body: '1.03.2023',
  },
  {
    label: t('roadmap.points.auction'),
    body: '15.05.2023',
    isCurrentPoint: true,
  },
  {
    label: t('roadmap.points.end'),
    body: '1.08.2023',
  },
];

const faq = [
  {
    question: t('faq.howLongToVerify'),
    answer: t('faq.howLongToVerifyAnswer'),
  },
  {
    question: t('faq.howLongWithdrawl'),
    answer: t('faq.howLongToVerifyAnswer'),
  },
  {
    question: t('faq.howBoostWork'),
    answer: t('faq.howLongToVerifyAnswer'),
  },
  {
    question: t('faq.whatIsApy'),
    answer: t('faq.howLongToVerifyAnswer'),
  },
  {
    question: t('faq.howWaitlistWork'),
    answer: t('faq.howLongToVerifyAnswer'),
  },
  {
    question: t('faq.howToChangeEmail'),
    answer: t('faq.howLongToVerifyAnswer'),
  },
  {
    question: t('faq.howToChangeAddress'),
    answer: t('faq.howLongToVerifyAnswer'),
  },
];
const rewardsDistribution = [
  {
    title: t('rewardsContribution.titles.xPerY', { value: 31 }),
    topLabel: t('rewardsContribution.labels.weHere'),
    description: t('rewardsContribution.descriptions.contribution12Dot'),
  },
  {
    title: t('rewardsContribution.titles.xPerY', { value: 8 }),
    topLabel: t('rewardsContribution.labels.next'),
    description: t('rewardsContribution.descriptions.contribution8Dot'),
  },
  {
    title: t('rewardsContribution.titles.xPerY', { value: 4 }),
    topLabel: t('rewardsContribution.labels.next'),
    description: t('rewardsContribution.descriptions.contribution4Dot'),
    takeSpace: 2,
  },
  {
    title: t('rewardsContribution.titles.xPerY', { value: 31 }),
    topLabel: t('rewardsContribution.labels.whatElse'),
    bulletList: [
      t('rewardsContribution.bulletLists.failureCompensation'),
      t('rewardsContribution.bulletLists.compensationRatio'),
    ],
    takeSpace: 4,
  },
];
---

<Layout
  navLinks={SITE.navLinks}
  title="Parity Crowdload."
  description="Crowdload is a simple lorem ipsum es dolor "
  footerLinks={SITE.footerLinks}
  logo={Logo}
>
  <Hero id="hero" />
  <Logos logos={logos} class="mt-auto" />

  <About
    id="about"
    projectDescription={aboutData.projectDescription}
    cards={aboutData.cards}
  />
  <AboutToken
    id="tokenomics"
    priceCard={priceCard}
    progressCard={progressCard}
  />
  <Roadmap id="roadmap" timelinePoints={timelinePoints} progressValue={63} />
  <Rewards id="rewards" rewardsDistribution={rewardsDistribution} />
  <Contributors id="contributors" />
  <AdditionalLinks id="additional" cardsData={tempCardsData} />
  <FAQ id="faq" faq={faq} />
  <TimerBanner />
  <ModalWrapper client:only><PolkadotForm client:only /></ModalWrapper>
</Layout>
